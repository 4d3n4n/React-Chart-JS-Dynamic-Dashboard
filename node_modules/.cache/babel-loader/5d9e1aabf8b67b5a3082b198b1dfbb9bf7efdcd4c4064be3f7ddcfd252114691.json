{"ast":null,"code":"var _jsxFileName = \"/Users/adenankhachnane/Downloads/ReachFlow/reachflow/client/src/components/HomePageTest.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport \"./HomePage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = ({\n  user\n}) => {\n  _s();\n  const [startDate, setStartDate] = useState(new Date());\n  const [endDate, setEndDate] = useState(new Date());\n  const [viewByDay, setViewByDay] = useState(false);\n  const [numberOfDays, setNumberOfDays] = useState(7); // Default to 7 days for 'This Week'\n  const [isCustomRange, setIsCustomRange] = useState(false); // State to track if in custom range mode\n  const [isCalendarVisible, setIsCalendarVisible] = useState(false); // State to track calendar visibility\n\n  useEffect(() => {\n    const today = new Date();\n    const currentDayOfWeek = today.getDay(); // TODAY\n\n    // Fonction pour générer des données pour la période sélectionnée\n    const generateRandomData = numPoints => Array.from({\n      length: numPoints\n    }, () => Math.floor(Math.random() * 1000));\n    const script = document.createElement('script');\n    script.src = 'https://cdn.jsdelivr.net/npm/chart.js';\n    script.async = true;\n    document.body.appendChild(script);\n    script.addEventListener('load', () => {\n      const ctx = document.getElementById('myChart').getContext('2d');\n      const gradient = ctx.createLinearGradient(0, 0, 0, 400);\n      gradient.addColorStop(0, 'rgba(67, 121, 238, 0.5)');\n      gradient.addColorStop(1, 'rgba(255, 255, 255, 0.01)');\n      const config = {\n        type: 'line',\n        data: {\n          labels: viewByDay ? Array.from({\n            length: numberOfDays\n          }, (_, i) => i + 1) : Array.from({\n            length: numberOfDays\n          }, (_, i) => i + 1),\n          datasets: [{\n            label: 'Chiffre d\\'affaire',\n            data: generateRandomData(numberOfDays),\n            backgroundColor: gradient,\n            borderColor: '#4379EE',\n            borderWidth: 2,\n            fill: true,\n            pointBackgroundColor: '#4379EE',\n            pointBorderColor: '#4379EE',\n            pointRadius: 3\n          }]\n        },\n        options: {\n          scales: {\n            y: {\n              beginAtZero: true,\n              stacked: true,\n              grid: {\n                color: '#ffffff00'\n              },\n              ticks: {\n                color: '#202224'\n              }\n            },\n            x: {\n              grid: {\n                color: '#ffffff00'\n              },\n              ticks: {\n                color: '#202224'\n              }\n            }\n          },\n          plugins: {\n            legend: {\n              display: false\n            }\n          }\n        }\n      };\n      let myChart = new window.Chart(ctx, config);\n      let selectedTimePeriod = document.getElementById('time-period');\n      document.querySelector('.custom_range_btn').addEventListener('click', () => {\n        setIsCalendarVisible(!isCalendarVisible);\n        setIsCustomRange(true);\n        selectedTimePeriod.value = 'customRange';\n      });\n      const handleDateChange = dates => {\n        const [start, end] = dates;\n        setStartDate(start);\n        setEndDate(end);\n        setViewByDay(true);\n        setIsCalendarVisible(false); // Masquer le calendrier lorsque la date de fin est sélectionnée\n      };\n      selectedTimePeriod.addEventListener('change', e => {\n        const selectedOption = e.target.value;\n        switch (selectedOption) {\n          case 'thisWeek':\n            setNumberOfDays(7);\n            setIsCustomRange(false);\n            break;\n          case 'lastTwoWeeks':\n            setNumberOfDays(14);\n            setIsCustomRange(false);\n            break;\n          case 'thisMonth':\n            setNumberOfDays(new Date(today.getFullYear(), today.getMonth() + 1, 0).getDate());\n            setIsCustomRange(false);\n            break;\n          case 'customRange':\n            const daysBetweenDates = (endDate - startDate) / (1000 * 60 * 60 * 24) + 1;\n            setNumberOfDays(daysBetweenDates);\n            break;\n          default:\n            setNumberOfDays(7);\n        }\n      });\n      return () => {\n        document.body.removeChild(script);\n        myChart.destroy();\n      };\n    });\n  }, [startDate, endDate, viewByDay, numberOfDays, isCustomRange]);\n  const handleDateChange = dates => {\n    const [start, end] = dates;\n    setStartDate(start);\n    setEndDate(end);\n    setViewByDay(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"dashboard-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"graph\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"graph-title-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date-select\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"view-toggle\",\n            children: isCustomRange && /*#__PURE__*/_jsxDEV(DatePicker, {\n              selected: endDate,\n              onChange: handleDateChange,\n              onSelect: () => setIsCalendarVisible(false) // Ajouter cette ligne\n              ,\n              startDate: startDate,\n              endDate: endDate,\n              selectsRange: true,\n              inline: true,\n              onClickOutside: () => setIsCalendarVisible(false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"custom_range\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              class: \"custom_range_btn\",\n              children: \"Custom Range\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"time-period\",\n            id: \"time-period\",\n            onChange: e => setViewByDay(e.target.value === 'thisWeek'),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"thisWeek\",\n              children: \"This Week\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"lastTwoWeeks\",\n              children: \"Last Two Weeks\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"thisMonth\",\n              children: \"This Month\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grap\",\n        children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n          className: \"income-graph\",\n          id: \"myChart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"PEYjn6xxgbw77ydbS5Nvx7HIrx8=\");\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useEffect","useState","DatePicker","jsxDEV","_jsxDEV","HomePage","user","_s","startDate","setStartDate","Date","endDate","setEndDate","viewByDay","setViewByDay","numberOfDays","setNumberOfDays","isCustomRange","setIsCustomRange","isCalendarVisible","setIsCalendarVisible","today","currentDayOfWeek","getDay","generateRandomData","numPoints","Array","from","length","Math","floor","random","script","document","createElement","src","async","body","appendChild","addEventListener","ctx","getElementById","getContext","gradient","createLinearGradient","addColorStop","config","type","data","labels","_","i","datasets","label","backgroundColor","borderColor","borderWidth","fill","pointBackgroundColor","pointBorderColor","pointRadius","options","scales","y","beginAtZero","stacked","grid","color","ticks","x","plugins","legend","display","myChart","window","Chart","selectedTimePeriod","querySelector","value","handleDateChange","dates","start","end","e","selectedOption","target","getFullYear","getMonth","getDate","daysBetweenDates","removeChild","destroy","className","children","fileName","_jsxFileName","lineNumber","columnNumber","selected","onChange","onSelect","selectsRange","inline","onClickOutside","class","name","id","_c","$RefreshReg$"],"sources":["/Users/adenankhachnane/Downloads/ReachFlow/reachflow/client/src/components/HomePageTest.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport \"./HomePage.css\";\n\nconst HomePage = ({ user }) => {\n  const [startDate, setStartDate] = useState(new Date());\n  const [endDate, setEndDate] = useState(new Date());\n  const [viewByDay, setViewByDay] = useState(false);\n  const [numberOfDays, setNumberOfDays] = useState(7); // Default to 7 days for 'This Week'\n  const [isCustomRange, setIsCustomRange] = useState(false); // State to track if in custom range mode\n  const [isCalendarVisible, setIsCalendarVisible] = useState(false); // State to track calendar visibility\n\n  useEffect(() => {\n    const today = new Date();\n    const currentDayOfWeek = today.getDay(); // TODAY\n\n    // Fonction pour générer des données pour la période sélectionnée\n    const generateRandomData = (numPoints) => Array.from({ length: numPoints }, () => Math.floor(Math.random() * 1000));\n\n    const script = document.createElement('script');\n    script.src = 'https://cdn.jsdelivr.net/npm/chart.js';\n    script.async = true;\n    document.body.appendChild(script);\n\n    script.addEventListener('load', () => {\n      const ctx = document.getElementById('myChart').getContext('2d');\n      const gradient = ctx.createLinearGradient(0, 0, 0, 400);\n      gradient.addColorStop(0, 'rgba(67, 121, 238, 0.5)');\n      gradient.addColorStop(1, 'rgba(255, 255, 255, 0.01)');\n\n      const config = {\n        type: 'line',\n        data: {\n          labels: viewByDay ? Array.from({ length: numberOfDays }, (_, i) => i + 1) : Array.from({ length: numberOfDays }, (_, i) => i + 1),\n          datasets: [{\n            label: 'Chiffre d\\'affaire',\n            data: generateRandomData(numberOfDays),\n            backgroundColor: gradient,\n            borderColor: '#4379EE',\n            borderWidth: 2,\n            fill: true,\n            pointBackgroundColor: '#4379EE',\n            pointBorderColor: '#4379EE',\n            pointRadius: 3\n          }]\n        },\n        options: {\n          scales: {\n            y: {\n              beginAtZero: true,\n              stacked: true,\n              grid: {\n                color: '#ffffff00',\n              },\n              ticks: {\n                color: '#202224',\n              }\n            },\n            x: {\n              grid: {\n                color: '#ffffff00',\n              },\n              ticks: {\n                color: '#202224',\n              }\n            }\n          },\n          plugins: {\n            legend: {\n              display: false\n            }\n          }\n        }\n      };\n\n      let myChart = new window.Chart(ctx, config);\n\n      let selectedTimePeriod = document.getElementById('time-period');\n\n      document.querySelector('.custom_range_btn').addEventListener('click', () => {\n        setIsCalendarVisible(!isCalendarVisible);\n        setIsCustomRange(true);\n        selectedTimePeriod.value = 'customRange';\n      });\n\n      const handleDateChange = (dates) => {\n        const [start, end] = dates;\n        setStartDate(start);\n        setEndDate(end);\n        setViewByDay(true);\n        setIsCalendarVisible(false); // Masquer le calendrier lorsque la date de fin est sélectionnée\n      };\n      \n\n      selectedTimePeriod.addEventListener('change', (e) => {\n        const selectedOption = e.target.value;\n        switch (selectedOption) {\n          case 'thisWeek':\n            setNumberOfDays(7);\n            setIsCustomRange(false);\n            break;\n          case 'lastTwoWeeks':\n            setNumberOfDays(14);\n            setIsCustomRange(false);\n            break;\n          case 'thisMonth':\n            setNumberOfDays(new Date(today.getFullYear(), today.getMonth() + 1, 0).getDate());\n            setIsCustomRange(false);\n            break;\n          case 'customRange':\n            const daysBetweenDates = (endDate - startDate) / (1000 * 60 * 60 * 24) + 1;\n            setNumberOfDays(daysBetweenDates);\n            break;\n          default:\n            setNumberOfDays(7);\n        }\n      });\n\n      return () => {\n        document.body.removeChild(script);\n        myChart.destroy();\n      };\n    });\n\n  }, [startDate, endDate, viewByDay, numberOfDays, isCustomRange]);\n\n  const handleDateChange = (dates) => {\n    const [start, end] = dates;\n    setStartDate(start);\n    setEndDate(end);\n    setViewByDay(true);\n  };\n\n  return (\n    <section className=\"dashboard-container\">\n      <div className=\"graph\">\n        <div className=\"graph-title-container\">\n          <h3>Title</h3>\n          <div className=\"date-select\">\n            <div className=\"view-toggle\">\n              {isCustomRange && (\n                <DatePicker\n  selected={endDate}\n  onChange={handleDateChange}\n  onSelect={() => setIsCalendarVisible(false)} // Ajouter cette ligne\n  startDate={startDate}\n  endDate={endDate}\n  selectsRange\n  inline\n  onClickOutside={() => setIsCalendarVisible(false)}\n/>\n\n              )}\n            </div>\n            <div class=\"custom_range\">\n              <button class=\"custom_range_btn\">Custom Range</button>\n            </div>\n            <select name=\"time-period\" id=\"time-period\" onChange={(e) => setViewByDay(e.target.value === 'thisWeek')}>\n              <option value=\"thisWeek\">This Week</option>\n              <option value=\"lastTwoWeeks\">Last Two Weeks</option>\n              <option value=\"thisMonth\">This Month</option>\n            </select>\n          </div>\n        </div>\n        <div className=\"grap\">\n          <canvas className=\"income-graph\" id=\"myChart\"></canvas>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default HomePage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}