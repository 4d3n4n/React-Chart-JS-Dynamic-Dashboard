{"ast":null,"code":"import{useState}from\"react\";// Pass URL\nconst useFetch=url=>{const[loading,setLoading]=useState(false);const[error,setError]=useState(\"\");const handleGoogle=async response=>{setLoading(true);fetch(url,{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({credential:response.credential})}).then(res=>{setLoading(false);return res.json();}).then(data=>{if(data!==null&&data!==void 0&&data.user){localStorage.setItem(\"user\",JSON.stringify(data===null||data===void 0?void 0:data.user));window.location.reload();}throw new Error((data===null||data===void 0?void 0:data.message)||data);}).catch(error=>{setError(error===null||error===void 0?void 0:error.message);});};return{loading,error,handleGoogle};};export default useFetch;","map":{"version":3,"names":["useState","useFetch","url","loading","setLoading","error","setError","handleGoogle","response","fetch","method","headers","body","JSON","stringify","credential","then","res","json","data","user","localStorage","setItem","window","location","reload","Error","message","catch"],"sources":["/Users/samuel/Documents/SaaS/spa/client/src/hooks/useFetch.jsx"],"sourcesContent":["import { useState } from \"react\";\n\n// Pass URL\nconst useFetch = (url) => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  const handleGoogle = async (response) => {\n    setLoading(true);\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n\n      body: JSON.stringify({ credential: response.credential }),\n    })\n      .then((res) => {\n        setLoading(false);\n\n        return res.json();\n      })\n      .then((data) => {\n        if (data?.user) {\n          localStorage.setItem(\"user\", JSON.stringify(data?.user));\n          window.location.reload();\n        }\n\n        throw new Error(data?.message || data);\n      })\n      .catch((error) => {\n        setError(error?.message);\n      });\n  };\n  return { loading, error, handleGoogle };\n};\n\nexport default useFetch;\n"],"mappings":"AAAA,OAASA,QAAQ,KAAQ,OAAO,CAEhC;AACA,KAAM,CAAAC,QAAQ,CAAIC,GAAG,EAAK,CACxB,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAGJ,QAAQ,CAAC,KAAK,CAAC,CAC7C,KAAM,CAACK,KAAK,CAAEC,QAAQ,CAAC,CAAGN,QAAQ,CAAC,EAAE,CAAC,CAEtC,KAAM,CAAAO,YAAY,CAAG,KAAO,CAAAC,QAAQ,EAAK,CACvCJ,UAAU,CAAC,IAAI,CAAC,CAChBK,KAAK,CAACP,GAAG,CAAE,CACTQ,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CAEDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEC,UAAU,CAAEP,QAAQ,CAACO,UAAW,CAAC,CAC1D,CAAC,CAAC,CACCC,IAAI,CAAEC,GAAG,EAAK,CACbb,UAAU,CAAC,KAAK,CAAC,CAEjB,MAAO,CAAAa,GAAG,CAACC,IAAI,CAAC,CAAC,CACnB,CAAC,CAAC,CACDF,IAAI,CAAEG,IAAI,EAAK,CACd,GAAIA,IAAI,SAAJA,IAAI,WAAJA,IAAI,CAAEC,IAAI,CAAE,CACdC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAET,IAAI,CAACC,SAAS,CAACK,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEC,IAAI,CAAC,CAAC,CACxDG,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC,CAC1B,CAEA,KAAM,IAAI,CAAAC,KAAK,CAAC,CAAAP,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEQ,OAAO,GAAIR,IAAI,CAAC,CACxC,CAAC,CAAC,CACDS,KAAK,CAAEvB,KAAK,EAAK,CAChBC,QAAQ,CAACD,KAAK,SAALA,KAAK,iBAALA,KAAK,CAAEsB,OAAO,CAAC,CAC1B,CAAC,CAAC,CACN,CAAC,CACD,MAAO,CAAExB,OAAO,CAAEE,KAAK,CAAEE,YAAa,CAAC,CACzC,CAAC,CAED,cAAe,CAAAN,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}