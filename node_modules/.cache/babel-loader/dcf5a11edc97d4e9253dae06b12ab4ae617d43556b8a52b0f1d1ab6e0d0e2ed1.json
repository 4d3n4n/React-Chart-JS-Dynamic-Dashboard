{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nconst useFetch = url => {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const handleGoogle = async response => {\n    console.log(response);\n  };\n  return {\n    loading,\n    error,\n    handleGoogle\n  };\n};\n_s(useFetch, \"AvkqqGi0dLSrybP4yaTVnuw07+4=\");\nconst handleGoogle = async response => {\n  setLoading(true);\n  fetch(url, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      credential: response.credential\n    })\n  }).then(res => {\n    setLoading(false);\n    return res.json();\n  }).then(data => {\n    if (data !== null && data !== void 0 && data.user) {\n      localStorage.setItem(\"user\", JSON.stringify(data === null || data === void 0 ? void 0 : data.user));\n      window.location.reload();\n    }\n    throw new Error((data === null || data === void 0 ? void 0 : data.message) || data);\n  }).catch(error => {\n    setError(error === null || error === void 0 ? void 0 : error.message);\n  });\n};\nexport default useFetch;","map":{"version":3,"names":["useState","useFetch","url","_s","loading","setLoading","error","setError","handleGoogle","response","console","log","fetch","method","headers","body","JSON","stringify","credential","then","res","json","data","user","localStorage","setItem","window","location","reload","Error","message","catch"],"sources":["/Users/samuel/Documents/SaaS/spa/client/src/hooks/useFetch.jsx"],"sourcesContent":["import { useState } from \"react\";\n\nconst useFetch = (url) => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  const handleGoogle = async (response) => {\n    console.log(response);\n  };\n  return { loading, error, handleGoogle };\n};\n\nconst handleGoogle = async (response) => {\n  setLoading(true);\n  fetch(url, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n\n    body: JSON.stringify({ credential: response.credential }),\n  })\n    .then((res) => {\n      setLoading(false);\n\n      return res.json();\n    })\n    .then((data) => {\n      if (data?.user) {\n        localStorage.setItem(\"user\", JSON.stringify(data?.user));\n        window.location.reload();\n      }\n\n      throw new Error(data?.message || data);\n    })\n    .catch((error) => {\n      setError(error?.message);\n    });\n};\n\nexport default useFetch;\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,MAAMC,QAAQ,GAAIC,GAAG,IAAK;EAAAC,EAAA;EACxB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMQ,YAAY,GAAG,MAAOC,QAAQ,IAAK;IACvCC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;EACvB,CAAC;EACD,OAAO;IAAEL,OAAO;IAAEE,KAAK;IAAEE;EAAa,CAAC;AACzC,CAAC;AAACL,EAAA,CARIF,QAAQ;AAUd,MAAMO,YAAY,GAAG,MAAOC,QAAQ,IAAK;EACvCJ,UAAU,CAAC,IAAI,CAAC;EAChBO,KAAK,CAACV,GAAG,EAAE;IACTW,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IAEDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEC,UAAU,EAAET,QAAQ,CAACS;IAAW,CAAC;EAC1D,CAAC,CAAC,CACCC,IAAI,CAAEC,GAAG,IAAK;IACbf,UAAU,CAAC,KAAK,CAAC;IAEjB,OAAOe,GAAG,CAACC,IAAI,CAAC,CAAC;EACnB,CAAC,CAAC,CACDF,IAAI,CAAEG,IAAI,IAAK;IACd,IAAIA,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAEC,IAAI,EAAE;MACdC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAET,IAAI,CAACC,SAAS,CAACK,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEC,IAAI,CAAC,CAAC;MACxDG,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;IAC1B;IAEA,MAAM,IAAIC,KAAK,CAAC,CAAAP,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEQ,OAAO,KAAIR,IAAI,CAAC;EACxC,CAAC,CAAC,CACDS,KAAK,CAAEzB,KAAK,IAAK;IAChBC,QAAQ,CAACD,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEwB,OAAO,CAAC;EAC1B,CAAC,CAAC;AACN,CAAC;AAED,eAAe7B,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}