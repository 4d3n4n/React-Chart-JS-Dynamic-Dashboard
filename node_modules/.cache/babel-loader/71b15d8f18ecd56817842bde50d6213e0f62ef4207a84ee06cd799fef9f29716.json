{"ast":null,"code":"// import { useState } from \"react\";\n\n// // Pass URL\n// const useFetch = (url) => {\n//   const [loading, setLoading] = useState(false);\n//   const [error, setError] = useState(\"\");\n\n//   const handleGoogle = async (response) => {\n//     setLoading(true);\n//     fetch(url, {\n//       method: \"POST\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//       },\n\n//       body: JSON.stringify({ credential: response.credential }),\n//     })\n//       .then((res) => {\n//         setLoading(false);\n\n//         return res.json();\n//       })\n//       .then((data) => {\n//         if (data?.user) {\n//           localStorage.setItem(\"user\", JSON.stringify(data?.user));\n//           window.location.reload();\n//         }\n\n//         throw new Error(data?.message || data);\n//       })\n//       .catch((error) => {\n//         setError(error?.message);\n//       });\n//   };\n//   return { loading, error, handleGoogle };\n// };\n\n// export default useFetch;","map":{"version":3,"names":[],"sources":["/Users/adenankhachnane/Downloads/ReachFlow/reachflow/client/src/hooks/useFetch.jsx"],"sourcesContent":["// import { useState } from \"react\";\n\n// // Pass URL\n// const useFetch = (url) => {\n//   const [loading, setLoading] = useState(false);\n//   const [error, setError] = useState(\"\");\n\n//   const handleGoogle = async (response) => {\n//     setLoading(true);\n//     fetch(url, {\n//       method: \"POST\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//       },\n\n//       body: JSON.stringify({ credential: response.credential }),\n//     })\n//       .then((res) => {\n//         setLoading(false);\n\n//         return res.json();\n//       })\n//       .then((data) => {\n//         if (data?.user) {\n//           localStorage.setItem(\"user\", JSON.stringify(data?.user));\n//           window.location.reload();\n//         }\n\n//         throw new Error(data?.message || data);\n//       })\n//       .catch((error) => {\n//         setError(error?.message);\n//       });\n//   };\n//   return { loading, error, handleGoogle };\n// };\n\n// export default useFetch;\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}