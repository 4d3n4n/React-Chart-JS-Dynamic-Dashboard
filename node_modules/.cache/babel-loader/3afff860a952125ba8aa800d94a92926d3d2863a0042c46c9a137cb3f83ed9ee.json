{"ast":null,"code":"var _jsxFileName = \"/Users/adenankhachnane/Downloads/ReachFlow/reachflow/client/src/components/HomePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport \"./HomePage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = ({\n  user\n}) => {\n  _s();\n  const [viewByDay, setViewByDay] = useState(false);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [chartData, setChartData] = useState(null);\n  useEffect(() => {\n    const generateChartData = userData => {\n      const weekDaysData = Array.from({\n        length: 7\n      }, () => []);\n      const hoursInDayData = Array.from({\n        length: 24\n      }, () => 0);\n      userData.forEach(entry => {\n        weekDaysData[entry.day].push(entry.value);\n        hoursInDayData[entry.hour] += entry.value;\n      });\n      return {\n        weekDaysData,\n        hoursInDayData\n      };\n    };\n    if (viewByDay) {\n      // Générer les données pour la journée sélectionnée\n      // Ici, vous devez utiliser la date sélectionnée dans selectedDate pour filtrer les données de l'utilisateur\n      // Par exemple, vous pouvez filtrer user.dataLastFourWeeks pour ne conserver que les données de la journée sélectionnée\n      const filteredData = user.dataLastFourWeeks.filter(entry => {\n        const entryDate = new Date(entry.date);\n        return entryDate.getFullYear() === selectedDate.getFullYear() && entryDate.getMonth() === selectedDate.getMonth() && entryDate.getDate() === selectedDate.getDate();\n      });\n\n      // Générer les données du graphique pour cette journée spécifique\n      const dayChartData = generateChartData(filteredData);\n      setChartData(dayChartData);\n    } else {\n      setChartData(generateChartData(user.dataLastFourWeeks));\n    }\n  }, [user, viewByDay, selectedDate]);\n  useEffect(() => {\n    const script = document.createElement('script');\n    script.src = 'https://cdn.jsdelivr.net/npm/chart.js';\n    script.async = true;\n    document.body.appendChild(script);\n    script.addEventListener('load', () => {\n      const ctx = document.getElementById('myChart').getContext('2d');\n      const gradient = ctx.createLinearGradient(0, 0, 0, 400);\n      gradient.addColorStop(0, 'rgba(67, 121, 238, 0.5)');\n      gradient.addColorStop(1, 'rgba(255, 255, 255, 0.01)');\n      const config = {\n        type: 'line',\n        data: {\n          labels: viewByDay ? Array.from({\n            length: 24\n          }, (_, i) => i + 1) : ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'],\n          datasets: [{\n            label: 'Chiffre d\\'affaire',\n            data: viewByDay ? chartData.hoursInDayData : chartData.weekDaysData,\n            backgroundColor: gradient,\n            borderColor: '#4379EE',\n            borderWidth: 2,\n            fill: true,\n            pointBackgroundColor: '#4379EE',\n            pointBorderColor: '#4379EE',\n            pointRadius: 3\n          }]\n        },\n        options: {\n          scales: {\n            y: {\n              beginAtZero: true,\n              stacked: true,\n              grid: {\n                color: '#ffffff00'\n              },\n              ticks: {\n                color: '#202224'\n              }\n            },\n            x: {\n              grid: {\n                color: '#ffffff00'\n              },\n              ticks: {\n                color: '#202224'\n              }\n            }\n          },\n          plugins: {\n            legend: {\n              display: false\n            }\n          }\n        }\n      };\n      let myChart = new window.Chart(ctx, config);\n      document.getElementById('time-period').addEventListener('change', e => {\n        const selectedWeek = e.target.value;\n        myChart.data.datasets[0].data = viewByDay ? chartData.hoursInDayData : chartData.weekDaysData;\n        myChart.update();\n      });\n      return () => {\n        document.body.removeChild(script);\n        myChart.destroy();\n      };\n    });\n  }, [viewByDay, chartData]);\n  const handleDateChange = e => {\n    const date = new Date(e.target.value);\n    setSelectedDate(date);\n    setViewByDay(true); // Activer la vue par jour\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"dashboard-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"graph\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"graph-title-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date-select\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"view-toggle\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              id: \"date-picker\",\n              onChange: handleDateChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"time-period\",\n            id: \"time-period\",\n            onChange: () => setViewByDay(false),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"semaine1\",\n              children: \"This Week\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"semaine2\",\n              children: \"Last Week\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"semaine3\",\n              children: \"Week -3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"semaine4\",\n              children: \"Week -4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grap\",\n        children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n          className: \"income-graph\",\n          id: \"myChart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"jW/N5IZMdejRegCgX84a8FsxZ4c=\");\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","HomePage","user","_s","viewByDay","setViewByDay","selectedDate","setSelectedDate","Date","chartData","setChartData","generateChartData","userData","weekDaysData","Array","from","length","hoursInDayData","forEach","entry","day","push","value","hour","filteredData","dataLastFourWeeks","filter","entryDate","date","getFullYear","getMonth","getDate","dayChartData","script","document","createElement","src","async","body","appendChild","addEventListener","ctx","getElementById","getContext","gradient","createLinearGradient","addColorStop","config","type","data","labels","_","i","datasets","label","backgroundColor","borderColor","borderWidth","fill","pointBackgroundColor","pointBorderColor","pointRadius","options","scales","y","beginAtZero","stacked","grid","color","ticks","x","plugins","legend","display","myChart","window","Chart","e","selectedWeek","target","update","removeChild","destroy","handleDateChange","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","onChange","name","_c","$RefreshReg$"],"sources":["/Users/adenankhachnane/Downloads/ReachFlow/reachflow/client/src/components/HomePage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport \"./HomePage.css\";\n\nconst HomePage = ({ user }) => {\n  const [viewByDay, setViewByDay] = useState(false);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [chartData, setChartData] = useState(null);\n\n  useEffect(() => {\n    const generateChartData = (userData) => {\n      const weekDaysData = Array.from({ length: 7 }, () => []);\n      const hoursInDayData = Array.from({ length: 24 }, () => 0);\n\n      userData.forEach(entry => {\n        weekDaysData[entry.day].push(entry.value);\n        hoursInDayData[entry.hour] += entry.value;\n      });\n\n      return { weekDaysData, hoursInDayData };\n    };\n\n    if (viewByDay) {\n      // Générer les données pour la journée sélectionnée\n      // Ici, vous devez utiliser la date sélectionnée dans selectedDate pour filtrer les données de l'utilisateur\n      // Par exemple, vous pouvez filtrer user.dataLastFourWeeks pour ne conserver que les données de la journée sélectionnée\n      const filteredData = user.dataLastFourWeeks.filter(entry => {\n        const entryDate = new Date(entry.date);\n        return entryDate.getFullYear() === selectedDate.getFullYear() &&\n              entryDate.getMonth() === selectedDate.getMonth() &&\n              entryDate.getDate() === selectedDate.getDate();\n      });\n      \n      // Générer les données du graphique pour cette journée spécifique\n      const dayChartData = generateChartData(filteredData);\n      setChartData(dayChartData);\n    } else {\n      setChartData(generateChartData(user.dataLastFourWeeks));\n    }\n  }, [user, viewByDay, selectedDate]);\n\n  useEffect(() => {\n    const script = document.createElement('script');\n    script.src = 'https://cdn.jsdelivr.net/npm/chart.js';\n    script.async = true;\n    document.body.appendChild(script);\n\n    script.addEventListener('load', () => {\n      const ctx = document.getElementById('myChart').getContext('2d');\n      const gradient = ctx.createLinearGradient(0, 0, 0, 400);\n      gradient.addColorStop(0, 'rgba(67, 121, 238, 0.5)');\n      gradient.addColorStop(1, 'rgba(255, 255, 255, 0.01)');\n\n      const config = {\n        type: 'line',\n        data: {\n          labels: viewByDay ? Array.from({ length: 24 }, (_, i) => i + 1) : ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'],\n          datasets: [{\n            label: 'Chiffre d\\'affaire',\n            data: viewByDay ? chartData.hoursInDayData : chartData.weekDaysData,\n            backgroundColor: gradient,\n            borderColor: '#4379EE',\n            borderWidth: 2,\n            fill: true,\n            pointBackgroundColor: '#4379EE',\n            pointBorderColor: '#4379EE',\n            pointRadius: 3\n          }]\n        },\n        options: {\n          scales: {\n            y: {\n              beginAtZero: true,\n              stacked: true,\n              grid: {\n                color: '#ffffff00',\n              },\n              ticks: {\n                color: '#202224',\n              }\n            },\n            x: {\n              grid: {\n                color: '#ffffff00',\n              },\n              ticks: {\n                color: '#202224',\n              }\n            }\n          },\n          plugins: {\n            legend: {\n              display: false\n            }\n          }\n        }\n      };\n\n      let myChart = new window.Chart(ctx, config);\n\n      document.getElementById('time-period').addEventListener('change', (e) => {\n        const selectedWeek = e.target.value;\n        myChart.data.datasets[0].data = viewByDay ? chartData.hoursInDayData : chartData.weekDaysData;\n        myChart.update();\n      });\n\n      return () => {\n        document.body.removeChild(script);\n        myChart.destroy();\n      };\n    });\n  }, [viewByDay, chartData]);\n\n  const handleDateChange = (e) => {\n    const date = new Date(e.target.value);\n    setSelectedDate(date);\n    setViewByDay(true); // Activer la vue par jour\n  };\n\n  return (\n    <section className=\"dashboard-container\">\n      <div className=\"graph\">\n        <div className=\"graph-title-container\">\n          <h3>Title</h3>\n          <div className=\"date-select\">\n            <div className=\"view-toggle\">\n              <input type=\"date\" id=\"date-picker\" onChange={handleDateChange} />\n            </div>\n            <select name=\"time-period\" id=\"time-period\" onChange={() => setViewByDay(false)}>\n              <option value=\"semaine1\">This Week</option>\n              <option value=\"semaine2\">Last Week</option>\n              <option value=\"semaine3\">Week -3</option>\n              <option value=\"semaine4\">Week -4</option>\n            </select>\n          </div>\n        </div>\n        <div className=\"grap\">\n          <canvas className=\"income-graph\" id=\"myChart\"></canvas>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default HomePage;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}